// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/owasp/nest-sdk/internal/utils"
	"github.com/owasp/nest-sdk/models/components"
)

// ListRepositoriesOrdering - Ordering field
type ListRepositoriesOrdering string

const (
	ListRepositoriesOrderingCreatedAt      ListRepositoriesOrdering = "created_at"
	ListRepositoriesOrderingMinusCreatedAt ListRepositoriesOrdering = "-created_at"
	ListRepositoriesOrderingUpdatedAt      ListRepositoriesOrdering = "updated_at"
	ListRepositoriesOrderingMinusUpdatedAt ListRepositoriesOrdering = "-updated_at"
)

func (e ListRepositoriesOrdering) ToPointer() *ListRepositoriesOrdering {
	return &e
}
func (e *ListRepositoriesOrdering) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "-created_at":
		fallthrough
	case "updated_at":
		fallthrough
	case "-updated_at":
		*e = ListRepositoriesOrdering(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRepositoriesOrdering: %v", v)
	}
}

type ListRepositoriesRequest struct {
	// Ordering field
	Ordering *ListRepositoriesOrdering `queryParam:"style=form,explode=true,name=ordering"`
	Page     *int64                    `default:"1" queryParam:"style=form,explode=true,name=page"`
	PageSize *int64                    `queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListRepositoriesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListRepositoriesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ListRepositoriesRequest) GetOrdering() *ListRepositoriesOrdering {
	if o == nil {
		return nil
	}
	return o.Ordering
}

func (o *ListRepositoriesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListRepositoriesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListRepositoriesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	PagedRepositorySchema *components.PagedRepositorySchema
}

func (o *ListRepositoriesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListRepositoriesResponse) GetPagedRepositorySchema() *components.PagedRepositorySchema {
	if o == nil {
		return nil
	}
	return o.PagedRepositorySchema
}
