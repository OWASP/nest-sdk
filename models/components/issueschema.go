// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/owasp/nest-sdk/internal/utils"
	"time"
)

// IssueSchema - Schema for Issue.
type IssueSchema struct {
	Body      string    `json:"body"`
	CreatedAt time.Time `json:"created_at"`
	Title     string    `json:"title"`
	State     State     `json:"state"`
	UpdatedAt time.Time `json:"updated_at"`
	URL       string    `json:"url"`
}

func (i IssueSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IssueSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, []string{"body", "created_at", "title", "state", "updated_at", "url"}); err != nil {
		return err
	}
	return nil
}

func (i *IssueSchema) GetBody() string {
	if i == nil {
		return ""
	}
	return i.Body
}

func (i *IssueSchema) GetCreatedAt() time.Time {
	if i == nil {
		return time.Time{}
	}
	return i.CreatedAt
}

func (i *IssueSchema) GetTitle() string {
	if i == nil {
		return ""
	}
	return i.Title
}

func (i *IssueSchema) GetState() State {
	if i == nil {
		return State("")
	}
	return i.State
}

func (i *IssueSchema) GetUpdatedAt() time.Time {
	if i == nil {
		return time.Time{}
	}
	return i.UpdatedAt
}

func (i *IssueSchema) GetURL() string {
	if i == nil {
		return ""
	}
	return i.URL
}
