// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/owasp/nest-sdk/internal/utils"
	"time"
)

// RepositorySchema - Schema for Repository.
type RepositorySchema struct {
	CreatedAt   time.Time `json:"created_at"`
	Description string    `json:"description"`
	Name        string    `json:"name"`
	UpdatedAt   time.Time `json:"updated_at"`
}

func (r RepositorySchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RepositorySchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"created_at", "description", "name", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (r *RepositorySchema) GetCreatedAt() time.Time {
	if r == nil {
		return time.Time{}
	}
	return r.CreatedAt
}

func (r *RepositorySchema) GetDescription() string {
	if r == nil {
		return ""
	}
	return r.Description
}

func (r *RepositorySchema) GetName() string {
	if r == nil {
		return ""
	}
	return r.Name
}

func (r *RepositorySchema) GetUpdatedAt() time.Time {
	if r == nil {
		return time.Time{}
	}
	return r.UpdatedAt
}
