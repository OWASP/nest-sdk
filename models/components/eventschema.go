// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/owasp/nest-sdk/internal/utils"
	"time"
)

// EventSchema - Schema for Event.
type EventSchema struct {
	Description string    `json:"description"`
	Name        string    `json:"name"`
	EndDate     time.Time `json:"end_date"`
	StartDate   time.Time `json:"start_date"`
	URL         string    `json:"url"`
}

func (e EventSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"description", "name", "end_date", "start_date", "url"}); err != nil {
		return err
	}
	return nil
}

func (o *EventSchema) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *EventSchema) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *EventSchema) GetEndDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndDate
}

func (o *EventSchema) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *EventSchema) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}
