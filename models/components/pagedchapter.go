// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type PagedChapter struct {
	// Current page number
	CurrentPage int64 `json:"current_page"`
	// Whether there is a next page
	HasNext bool `json:"has_next"`
	// Whether there is a previous page
	HasPrevious bool      `json:"has_previous"`
	Items       []Chapter `json:"items"`
	// Total number of items
	TotalCount int64 `json:"total_count"`
	// Total number of pages
	TotalPages int64 `json:"total_pages"`
}

func (p *PagedChapter) GetCurrentPage() int64 {
	if p == nil {
		return 0
	}
	return p.CurrentPage
}

func (p *PagedChapter) GetHasNext() bool {
	if p == nil {
		return false
	}
	return p.HasNext
}

func (p *PagedChapter) GetHasPrevious() bool {
	if p == nil {
		return false
	}
	return p.HasPrevious
}

func (p *PagedChapter) GetItems() []Chapter {
	if p == nil {
		return []Chapter{}
	}
	return p.Items
}

func (p *PagedChapter) GetTotalCount() int64 {
	if p == nil {
		return 0
	}
	return p.TotalCount
}

func (p *PagedChapter) GetTotalPages() int64 {
	if p == nil {
		return 0
	}
	return p.TotalPages
}
